=encoding utf8

[[Mojolicious API リファレンス]]

=head1 Mojo::Cookie::Response

=head1 NAME

Mojo::Cookie::Response - HTTPレスポンスのクッキーのコンテナ

=head1 使い方

  use Mojo::Cookie::Response;

  my $cookie = Mojo::Cookie::Response->new;
  $cookie->name('foo');
  $cookie->value('bar');
  say "$cookie";

=head1 説明

[[Mojo::Cookie::Response]]は、HTTPレスポンスクッキーです。L<RFC 6265|http://tools.ietf.org/html/rfc6265>に基づいています。

=head1 属性

[[Mojo::Cookie::Response]]は[[Mojo::Cookie]]のすべての属性を
継承しており、次の新しいメソッドを実装しています。

=head2 domain

  my $domain = $cookie->domain;
  $cookie    = $cookie->domain('localhost');

クッキーのドメイン。

=head2 expires

  my $expires = $cookie->expires;
  $cookie     = $cookie->expires(time + 60);

クッキーの有効期限。

=head2 host_only

  my $bool = $cookie->host_only;
  $cookie  = $cookie->host_only($bool);

Host-onlyフラグは、クッキーの"domain"によって、リクエストのホストが、識別できることを意味します。

=head2 httponly

  my $bool = $cookie->httponly;
  $cookie  = $cookie->httponly($bool);

HTTPのみフラグ。
クライアント側のスクリプトが
このクッキーにアクセスすることを
防ぎます。

=head2 max_age

  my $max_age = $cookie->max_age;
  $cookie     = $cookie->max_age(60);

クッキーの最大保持秒。

=head2 path

  my $path = $cookie->path;
  $cookie  = $cookie->path('/test');

クッキーパス。

=head2 samesite

  my $samesite = $cookie->samesite;
  $cookie      = $cookie->samesite('Lax');

SameSiteの値。この属性は、ほとんどの一般的なブラウザがサポートしている機能ですが、実験的です。

以下を表現する仕様はまだありません。

L<this draft|https://tools.ietf.org/html/draft-west-first-party-cookies-07>.

=head2 secure

  my $bool = $cookie->secure;
  $cookie  = $cookie->secure($bool);

セキュアフラグ。ブラウザーが
HTTPS接続のみでこのクッキーを
送信することを指示します。

=head1 メソッド

[[Mojo::Cookie::Response]]は[[Mojo::Cookie]]からすべてのメソッドを継承しており、
次の新しいメソッドを実装しています。

=head2 parse

  my $cookies = $cookie->parse('f=b; Version=1; Path=/');

クッキーを解析します。

=head2 to_string

  my $string = $cookie->to_string;

クッキーを描画します。

=head1 参考

[[Mojolicious]], L<Mojolicious::Guides>, L<http://mojolicio.us>.

(Mojolicious 8.12を反映)

=cut