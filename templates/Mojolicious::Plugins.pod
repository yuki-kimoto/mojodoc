=encoding utf8

[[Mojolicious API リファレンス|mojo-api-reference]]



=head1 名前

Mojolicious::Plugins - プラグインマネージャー

=head1 使い方

  use Mojolicious::Plugins;

  my $plugins = Mojolicious::Plugins->new;
  push @{$plugins->namespaces}, 'MyApp::Plugin';

=head1 説明

[[Mojolicious::Plugins]]は、[[Mojolicious]]のプラグインマネージャです。

=head1 属性

[[Mojolicious::Plugins]]は、以下の属性を実装しています。

=head2 namespaces

  my $namespaces = $plugins->namespaces;
  $plugins       = $plugins->namespaces(['Mojolicious::Plugin']);

プラグインをロードするときに見る名前空間。
特定のアプリケーションプラグインをロードするために、名前空間を追加することができます。

  push @{$plugins->namespaces}, 'MyApp::Plugins';

=head1 プラグイン

以下のプラグインが[[Mojolicious]]のディストリビューションにはサンプルとして含まれています。

=head2 Mojolicious::Plugin::Config

[[Mojolicious::Plugin::Config]]

Perlで書ける設定ファイル。

=head2 Mojolicious::Plugin::DefaultHelpers

[[Mojolicious::Plugin::DefaultHelpers]]

自動的にロードされる一般的な目的のヘルパーの集合です。

=head2 Mojolicious::Plugin::EPLRenderer

[[Mojolicious::Plugin::EPLRenderer]]

自動的に読み込まれる、単純な埋め込みPerlのテンプレートのためのレンダラーです。

=head2 Mojolicious::Plugin::EPRenderer

[[Mojolicious::Plugin::EPRenderer]]

自動的にロードされるより賢い埋め込みPerlのテンプレートのためのレンダラーです。

=head2 Mojolicious::Plugin::HeaderCondition

[[Mojolicious::Plugin::HeaderCondition]]

自動的にロードされるあらゆる種類のヘッダーのためのルート条件です。

=head2 Mojolicious::Plugin::JSONConfig

[[Mojolicious::Plugin::JSONConfig]]

JSON設定ファイル。

=head2 Mojolicious::Plugin::Mount

[[Mojolicious::Plugin::Mount]]

[[Mojolicious]]アプリケーション全体をマウントします。

=head2 Mojolicious::Plugin::TagHelpers

[[Mojolicious::Plugin::TagHelpers]]

自動的に読み込まれる、テンプレートの特別なヘルパーの集合です。

=head2 イベント

[[Mojolicious::Plugins]]は[[Mojo::EventEmitter]]からすべてのイベントを継承しています。

=head1 ATTRIBUTES

L<Mojolicious::Plugins> implements the following attributes.

=head2 namespaces

  my $namespaces = $plugins->namespaces;
  $plugins       = $plugins->namespaces(['Mojolicious::Plugin']);

プラグインをロードする名前空間。デフォルトは[[Mojolicious::Plugin]]。

  # プラグインをロードする他の名前空間を追加
  push @{$plugins->namespaces}, 'MyApp::Plugin';

=head1 メソッド

[[Mojolicious::Plugins]]は、[[Mojo::EventEmitter]]のすべてのメソッドを継承し、以下の新しいメソッドを実装しています。

=head2 emit_chain

  $plugins->emit_chain('foo');
  $plugins->emit_chain(foo => 123);
  
チェーンされたフックイベントを発行します。

=head2 emit_hook

  $plugins = $plugins->emit_hook('foo');
  $plugins = $plugins->emit_hook(foo => 123);

フックイベントを発行します。

=head2 emit_hook_reverse

  $plugins = $plugins->emit_hook_reverse('foo');
  $plugins = $plugins->emit_hook_reverse(foo => 123);

逆順でフックイベントを発行します。

=head2 load_plugin

  my $plugin = $plugins->load_plugin('some_thing');
  my $plugin = $plugins->load_plugin('SomeThing');
  my $plugin = $plugins->load_plugin('MyApp::Plugin::SomeThing');

設定された名前空間かモジュールのフルネームから、プラグインをロードします。

=head2 register_plugin

  $plugins->register_plugin('some_thing', Mojolicious->new);
  $plugins->register_plugin('some_thing', Mojolicious->new, foo => 23);
  $plugins->register_plugin('some_thing', Mojolicious->new, {foo => 23});
  $plugins->register_plugin('SomeThing', Mojolicious->new);
  $plugins->register_plugin('SomeThing', Mojolicious->new, foo => 23);
  $plugins->register_plugin('SomeThing', Mojolicious->new, {foo => 23});
  $plugins->register_plugin('MyApp::Plugin::SomeThing', Mojolicious->new);
  $plugins->register_plugin(
    'MyApp::Plugin::SomeThing', Mojolicious->new, foo => 23);
  $plugins->register_plugin(
    'MyApp::Plugin::SomeThing', Mojolicious->new, {foo => 23});

設定された名前空間かモジュールのフルネームからプラグインをロードし、C<register>を実行します。
オプションの引数は、C<register>に渡されます。

=head1 参考

L<Mojolicious>, L<Mojolicious::Guides>, L<http://mojolicio.us>.

(Mojolicious 8.12を更新。2019年6月12日更新)

=cut